{% set version = "17.0.6" %}

{% if sys_abi is undefined %}
{% set sys_abi = "dummy" %}
{% endif %}

package:
  name: libcxx_and_libcxxabi
  version: {{ version }}

source:
  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(".rc", "-rc") }}/llvm-project-{{ version.replace(".rc", "rc") }}.src.tar.xz
    sha256: 58a8818c60e6627064f312dbf46c02d9949956558340938b71cf731ad8bc0813
    patches:
      - patches/0001-Support-legacy-standalone-builds.patch
      # See https://discourse.llvm.org/t/shipping-custom-libc-on-macos/58606
      - patches/0002-Fix-ABI-compatibility-with-system.patch    # [sys_abi == "pre-12"]
      - patches/0003-custom-error-message-for-old-sdk.patch
      # upstream removed fallbacks in case the underlying libc didn't support C11 in
      # https://github.com/llvm/llvm-project/commit/21f73d5826fb5024a27eaacafadfa316f58949c5;
      # using new libcxx with old clang versions (beyond what upstream supports) relies on
      # having these fallbacks in place. Drop if conflict-resolution becomes too messy.
      - patches/0004-Revert-libc-Remove-workaround-for-C11-features-on-co.patch

build:
  number: 2
  skip: true  # [win]
  skip: True  # [linux and s390x]
  skip: True  # [py<30]

  ignore_run_exports:
    - libstdcxx-ng
  missing_dso_whitelist:
    - /usr/lib/libc++abi.dylib
    - /lib64/libpthread.so.0  # [linux]
    - /lib64/libc.so.6        # [linux]
    - /lib64/ld64.so.2        # [linux]
    - /lib64/libgcc_s.so.1    # [linux]
    - /lib64/ld-linux-aarch64.so.1  # [linux]
    - /lib64/ld-linux-x86-64.so.2   # [linux]

requirements:
  build:
    - cmake
    - ninja
    - {{ compiler('cxx') }}
    - python                  # [not osx]
    - patch                   # [unix]
    - m2-patch                # [win]
  host:
    - clangdev {{ version }}  # [not osx]
    - llvmdev {{ version }}   # [not osx]

outputs:
  - name: libcxx
    files:
      - include/c++
      - Library/include/c++
      - lib/libc++.*
      - lib/libc++fs.*
      - lib/libc++experimental.*
      - Library/bin/c++*.dll
      - Library/lib/c++*.lib
      - Library/lib/libc++*.lib
    requirements:
      build:
        - {{ compiler('cxx') }}
      host:
        - {{ pin_subpackage("libcxxabi", exact=True) }}    # [linux]
      run:
        - {{ pin_subpackage("libcxxabi", exact=True) }}    # [linux]
    test:
      requires:
        - clang                  # [osx]
        - clangxx
        - ld64                   # [osx]
        - cctools                # [osx]
        - llvm-tools             # [osx]
        - {{ compiler('cxx') }}  # [not osx]
      files:
        - test_sources
        - compile_test.sh   # [unix]
        - compile_test.bat  # [win]
      commands:
        # Dummy var for different hashes
        - echo {{ dummy_var }}                                    # [osx]
        - echo {{ sys_abi }}                                      # [osx]
        - if not exist %LIBRARY_INC%\\c++\\v1\\iterator exit 1    # [win]
        - test -f $PREFIX/include/c++/v1/iterator                 # [unix]
        - bash compile_test.sh                                    # [unix]
        - compile_test.bat                                        # [win]
        # !!!!!!!!!!!! README !!!!!!!!!!!!!!!!!!
        # we do not ship libcxxabi on OSX - this breaks exception passing
        - if [ -f $PREFIX/lib/libc++abi.dylib ]; then exit 1; fi  # [osx]
        - test -f $PREFIX/lib/libc++abi.so                        # [linux]

      # Following 2 projects had issues with libc++, so check them
      # before releasing just to be sure.
      # downstreams:   # [osx]
      #  - python-symengine  # [osx]
      #  - openturns         # [osx]
      #  - libcxx-testing    # [osx]

  - name: libcxxabi
    build:
      skip: true  # [not linux]
      missing_dso_whitelist:
        - /lib64/libpthread.so.0
        - /lib64/libc.so.6
        - /lib64/ld64.so.2
        - /lib64/libgcc_s.so.1
        - /lib64/ld-linux-aarch64.so.1
        - /lib64/ld-linux-x86-64.so.2
    files:
      - lib/libc++abi.*
    requirements:
      run_constrained:
        - libcxx {{ version }}.*
    test:
      commands:
        - test -f $PREFIX/lib/libc++abi.so  # [linux]

about:
  home: https://libcxx.llvm.org/
  license: Apache-2.0 WITH LLVM-exception
  license_file: libcxx/LICENSE.TXT
  license_family: Apache
  summary: LLVM C++ standard library
  dev_url: https://github.com/llvm/llvm-project
  doc_url: https://libcxx.llvm.org/

extra:
  recipe-maintainers:
    - SylvainCorlay
    - inducer
    - jakirkham
    - isuruf
    - beckermr
    - timsnyder
    - h-vetinari
  feedstock-name: libcxx
